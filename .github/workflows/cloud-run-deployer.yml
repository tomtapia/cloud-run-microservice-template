name: Build and Deploy to Google Cloud

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-package:
    name: Setup, Build and Package
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Authenticate with Google Cloud
      - id: "auth"
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # Setup gcloud CLI/SDK
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Authorize Docker push
        run: gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev

      - name: Build and tag the docker image
        run: |-
          docker build . --tag ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_NAME }}/${{ secrets.APP_NAME }}:$GITHUB_SHA

      - name: Push the image to the Google Artifact Registry (GAR)
        run: |-
          docker push ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_NAME }}/${{ secrets.APP_NAME }}:$GITHUB_SHA

  deploy:
      name: Deploy to development
      runs-on: ubuntu-latest
      needs: build-and-package
      environment: development
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        # Authenticate with Google Cloud
        - id: "auth"
          uses: google-github-actions/auth@v2
          with:
            credentials_json: '${{ secrets.GCP_SA_KEY }}'

        # Setup gcloud CLI/SDK
        - name: Set up Cloud SDK
          uses: google-github-actions/setup-gcloud@v2

        - name: Deploy
          run: |-
            gcloud run deploy ${{ secrets.APP_NAME }} \
            --region ${{ secrets.REGION }} \
            --image ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_NAME }}/${{ secrets.APP_NAME }}:$GITHUB_SHA \
            --no-allow-unauthenticated \
            --min-instances ${{ vars.MIN_INSTANCES }} \
            --max-instances ${{ vars.MAX_INSTANCES }}1 \
            --memory ${{ vars.MEMORY }} \
            --platform ${{ vars.PLATFORM }} \
            --service-account ${{ secrets.SERVICE_ACCOUNT_EMAIL }} \
            --timeout ${{ vars.TIMEOUT }} \
            --port ${{ secrets.APP_PORT }} \
            --set-env-vars 'GOOGLE_CLOUD_PROJECT=${{ secrets.PROJECT_ID }}' \
            --set-env-vars 'APP_NAME=${{ secrets.APP_NAME }}' \
            --set-env-vars 'APP_DESCRIPTION=${{ secrets.APP_DESCRIPTION }}' \
            --set-env-vars 'API_VERSION=${{ env.GITHUB_SHA }}' \
            --quiet
